html(lang='en')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='description', content='')
    meta(name='author', content='')
    link(rel='icon', href='../../favicon.ico')
    title Jumbotron Template for Bootstrap
    // Custom styles for this template
    link(href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css', rel='stylesheet')
    style(type='text/css').
      :root .carbonad,
      :root #carbonads-container,
      :root #content > #right > .dose > .dosesingle,
      :root #content > #center > .dose > .dosesingle
      { display: none !important; }
    // HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries
    //if lt IE 9
      script(src='https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js')
      script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')
  body
    nav.navbar.navbar-inverse.navbar-fixed-top
      .container
        .navbar-header
          button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#navbar', aria-expanded='false', aria-controls='navbar')
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href='#') Investicate
        #navbar.navbar-collapse.collapse
        // /.navbar-collapse
    // Main jumbotron for a primary marketing message or call to action
    .jumbotron
      .container
        h1 Investicate
        p
          | Put the description here..................................................................................................................................................
        p
          a.btn.btn-primary.btn-lg(href='#', role='button') Learn more »
    .container
      // Example row of columns
      .row
        .col-md-12
          #root  
      hr
      footer
        p © 2016 Company, Inc.
    // /container
    //
      Bootstrap core JavaScript
      ==================================================
    // Placed at the end of the document so the pages load faster
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react-dom.min.js')
    script.
      'use strict';
      var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
      function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
      function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
      function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
      var locationValues = ['Boston', 'DC', 'Santa Clara', 'Philadelphia'];
      var categoryValues = ['Food and Services', 'Sports Wholesale', 'Car Repair', 'Health and Beauty'];
      var NameForm = function (_React$Component) {
      _inherits(NameForm, _React$Component);
      function NameForm(props) {
      _classCallCheck(this, NameForm);
      var _this = _possibleConstructorReturn(this, (NameForm.__proto__ || Object.getPrototypeOf(NameForm)).call(this, props));
      _this.state = { category: '', location: '' };
      _this.handleChange = _this.handleChange.bind(_this);
      _this.handleSubmit = _this.handleSubmit.bind(_this);
      _this.handleLocChange = _this.handleLocChange.bind(_this);
      return _this;
      }
      _createClass(NameForm, [{
      key: 'handleChange',
      value: function handleChange(event) {
      this.setState({ category: event.target.value });
      }
      }, {
      key: 'handleLocChange',
      value: function handleLocChange(event) {
      this.setState({ location: event.target.value });
      }
      }, {
      key: 'handleSubmit',
      value: function handleSubmit(event) {
      alert('A name was submitted: ' + this.state.value);
      event.preventDefault();
      }
      }, {
      key: 'render',
      value: function render() {
      return React.createElement(
      'div',
      { className: 'col-md-6' },
      React.createElement(
      'h1',
      { className: 'title' },
      'Investicate'
      ),
      React.createElement(
      'form',
      { onSubmit: this.handleSubmit },
      'Category:',
      React.createElement(
      'select',
      { value: this.state.value, onChange: this.handleChange },
      categoryValues.map(function (v) {
      return React.createElement(
      'option',
      { key: v, value: v },
      v
      );
      })
      ),
      React.createElement('br', null),
      'Location:',
      React.createElement(
      'select',
      { value: this.state.location, onChange: this.handleLocChange },
      locationValues.map(function (v) {
      return React.createElement(
      'option',
      { key: v, value: v },
      v
      );
      })
      ),
      React.createElement('br', null),
      React.createElement('input', { type: 'submit', value: 'Submit' })
      )
      );
      }
      }]);
      return NameForm;
      }(React.Component);
      ReactDOM.render(React.createElement(NameForm, null), document.getElementById('root'));
      //const locationValues = [
      //   'Boston',
      //   'DC',
      //   'Santa Clara',
      //   'Philadelphia'
      // ];
      // const categoryValues = [
      //   'Food and Services',
      //   'Sports Wholesale',
      //   'Car Repair',
      //   'Health and Beauty'
      // ]
      // class NameForm extends React.Component {
      //   constructor(props) {
      //     super(props);
      //     this.state = {category: '', location: ''};
      //     this.handleChange = this.handleChange.bind(this);
      //     this.handleSubmit = this.handleSubmit.bind(this);
      //     this.handleLocChange = this.handleLocChange.bind(this);
      //   }
      //   handleChange(event) {
      //     this.setState({category: event.target.value});
      //   }
      //   handleLocChange(event) {
      //     this.setState({location: event.target.value});
      //   }
      //   handleSubmit(event) {
      //     alert('A name was submitted: ' + this.state.value);
      //     event.preventDefault();
      //   }
      //   render() {
      //     return (
      //       <div className="col-md-6">
      //           <h1 className="title">Investicate</h1>
      //           <form onSubmit={this.handleSubmit}>
      //             Category:
      //             <select value={this.state.value} onChange={this.handleChange}>
      //               {categoryValues.map((v)=><option key={v} value={v}>{v}</option>)}
      //             </select>
      //             <br />
      //             Location:
      //             <select value={this.state.location} onChange={this.handleLocChange}>
      //               {locationValues.map((v)=><option key={v} value={v}>{v}</option>)}
      //             </select>
      //             <br />
      //             <input type="submit" value="Submit" />
      //           </form>
      //         </div>
      //     );
      //   }
      // }
      // ReactDOM.render(
      //   <NameForm />,
      //   document.getElementById('root')
      // );

    script.
      window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\\/script>')
    script(src='../../dist/js/bootstrap.min.js')
    // IE10 viewport hack for Surface/desktop Windows 8 bug
    script(src='../../assets/js/ie10-viewport-bug-workaround.js')
